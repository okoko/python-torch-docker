# This requires
# vars.DOCKERHUB_USERNAME for the result image account
# secrets.DOCKERHUB_USERNAME for the login account that pushes the image
# secrets.DOCKERHUB_TOKEN for the login account password that pushes the image

name: Build Torchvision Wheel

on:
  workflow_dispatch:
    inputs:
        torchvision-version:
            description: 'Version of torchvision to build (e.g. 0.18.1)'
            required: true
            default: '0.18.1'
            type: string
        pytorch-version:
            description: 'Torch version (check compatibility matrix)'
            required: true
            default: '2.3.1'
            type: string
        push-to-registry:
            description: 'Push image to registry'
            required: true
            type: boolean
            default: true

permissions:
  contents: read
  id-token: write
  attestations: write

jobs:
  build-torchvision-wheel:
    runs-on: [self-hosted, ARM64]
    timeout-minutes: 1439  # GITHUB_TOKEN expires in 24 hours, so keep it just below that
    steps:
    - name: Print Inputs
      run: echo "${{ toJSON(inputs) }}"

    - id: created
      run: echo "created=$(date --utc +%Y-%m-%dT%H:%M:%SZ)" >> $GITHUB_OUTPUT

    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@4fd812986e6c8c2a69e18311145f9371337f27d4 # v3.4.0

    - name: Log in to Docker Hub
      uses: docker/login-action@0d4c9c5ea7693da7b068278f7b52bda2a190a446 # v3.2.0
      if: github.ref == 'refs/heads/main'
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Discover cache path
      # A runner can have custom variables in .env file, but they show only in
      # the shell environment, not in the env context. Detect and set in env
      # context with a fallback to a default path next to tool cache.
      run: |
          [ -z "$CACHE_PATH" ] && CACHE_PATH=$(realpath "$RUNNER_TOOL_CACHE/../_cache")
          echo "CACHE_PATH=$CACHE_PATH" >> "$GITHUB_ENV"
          mkdir -p "$CACHE_PATH"

    - uses: docker/build-push-action@1ca370b3a9802c92e886402e0dd88098a2533b12 # v6.4.1
      id: push
      with:
        context: .
        file: ./torchvision-wheel.Dockerfile
        push: ${{ inputs.push-to-registry || false }}
        build-args: |
          TORCHVISION_VERSION=${{ inputs.torchvision-version }}
          TORCH_WHEEL_SOURCE=${{ vars.DOCKERHUB_USERNAME }}/torch-wheels:${{ inputs.pytorch-version }}
          PYTORCH_VERSION=${{ inputs.pytorch-version }}
        tags: |
            ${{ vars.DOCKERHUB_USERNAME }}/torchvision-wheels:${{ inputs.torchvision-version }}
        labels: |
          org.opencontainers.image.created=${{ steps.created.outputs.created }}
          org.opencontainers.image.revision=${{ github.sha }}
          org.opencontainers.image.version=${{ inputs.pytorch-version }}
        platforms: linux/amd64,linux/arm64
        cache-from: type=local,src=${{ env.CACHE_PATH }}/torchvision-wheel
        cache-to: type=local,dest=${{ env.CACHE_PATH }}/torchvision-wheel-new,mode=max

    - # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      name: Move cache
      run: |
        rm -rf ${{ env.CACHE_PATH }}/torchvision-wheel
        mv ${{ env.CACHE_PATH }}/torchvision-wheel-new ${{ env.CACHE_PATH }}/torchvision-wheel

    - name: Attest
      uses: actions/attest-build-provenance@v1
      if: ${{ inputs.push-to-registry }}
      with:
        subject-name: index.docker.io/${{ vars.DOCKERHUB_USERNAME }}/torchvision-wheels
        subject-digest: ${{ steps.push.outputs.digest }}
        push-to-registry: true
